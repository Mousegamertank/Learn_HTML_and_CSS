/*AULA 2*/

para se criar um arquivo de HTML, ao nomear no final se coloca '.html', assim é indicado que é um HTML, o nome do arquivo HTML, não deve conter espaço, acentos ,serifas; 
para ficar mais facil voce pode instalar  um lpugin que se chama HTML preview, com o crtl(command) + shift + P, ira abrir uma caixa acima, logo apos voce abre o preview com HTML: open preview, abrindo todas as alterações feitas irão ser mostradas, incluindo a diferença de tag

/* AULA 3 */
Hypertext Markup Language 
(linguagem de marcação de Hipertexto);

HTML Não é linguagem de programação, porém ela tem semantica/sintaxe, com o hipertexto (links), se usa elementos 

/* AULA 4 */
comentarios em HTML são linhas que o browser ignora, em HTML tal é feito com <!--Comentário aqui-- 

/* AULA 5 */
marcação do HTML: 
caso seja uma tag especifica alguns idles(formatadores para programação instantaneamente fecham ou te dão a opção de usar a tag), no caso do Visual Studio Code, ao se colocar h1 e apertar enter se cria uma tag HTML de titulo, caso seja na mão voce utiliza para abrir uma tag '<' e '>' com a tag desejada dentro, exemplo:
	<h1> abriu
		elementos internos(escrita)
	</h1> fechou
a tag h1 tem fechamento e esse segundo h1 com / fecha ela;
porém exitem tags sem fechamento como é o caso da tag <img src="" alt="">, que é usada para adicionar imagens, o atributo src="" é usado para adicionar a imagem apartir de uma biblioteca já o alt, caso o atributo não consiga ser exibido será o texto apresentado no lugar da imagem;

/* AULA 6 */

atributos são informações extras ou configurações de uma tag, por exemplo a tag <img src="" alt=""> que possui o atributo src e alt;
existem tambem atributos booleanos que não precisam de conteudo como a tag <input type="text" disable>, na qual o atributo type cria o estilo da caixa a se usar no caso text de texto, enquanto o atributo disable bloqueia o usuario de digitar nesta caixa, o disable não precisa de ="";
aspas, no caso da tag <a href="" title="" target="">texto aqui</a>, o atributo title='da um nome a tag', o target='indica onde sera aberto caso blank em outra pagina', e o href='é a linkagem da url', exemplo:
<a href="https://google.com"> Google </a> a linkagem será direto no google;
usem aspas duplas;

/* AULA 7 */
Atributos Globais podem ser encaixados em todas as tags HTML, exemplo
<div class='carrinho'>
</div>
a class é utilizada para se acessar no Js e ainda para definir o que é cada coisa;

contenteditable='true', voce pode editar este elemento no navegador quando se está true, 

já no atributo data- (pode-se colocar qualquer nome após o traço, sem espaço), utilizado no JS e CSS

hidden esconde uma tag, e o ID pode-se usar apenas um nome por tag ele deve ser especifico enquanto o class pode se agrupar varias tags;

style aplica estilização no html, a estilização é feita em CSS;

tabeindex='(usar valor interno com numeros)', ela atribui dentro da sua pagina caso voce aperte tab, a capacidade de pular para area especifica, já no 1 ou 2 ai você diferencia;

title='definir o titulo', não muda a aparencia mas se você descansar o mouse ele vai aparecer o titulo;
no 'develop.mozilla.org' voce pode pesquisar os atributos goblais, e são muitos;

/* AULA 8 */

aninhamento de tags, logo a tag <p> {paragrafo}, pode receber dentro dela uma outra tag como italico assim como o exemplo mostra:

<p> 
	teste1 <em> funciona </em> teste2 
</p>

e as tags seguem uma hierarquia, como o <em> é uma tag filha da tag <p> que tambem pode ser uma tag filha da <div> e assim vai, mas por que isso? simplesmente que uma alteração dentro da div vai alterar tanto o em quanto a cor, já a <em> não altera a tag <p>;

falando de fluxo agora, se voce mostrar duas tags <p> uma abaixo da outra, ambas irão aparecer na ordem que você as colocou porém o espaçamento entre elas será maio pois há o distanciamento entre tags, se você der uma quebra de linha paradão logo a forma que será apresentado será linear, para ilustrar melhor acompanhe o exemplo:

<p> 
	josé 
	cruzou a rua 
<p>
--------
ira aparecer da seguinte forma:
	josé cruzou a rua

tudo linear, porém quando se ocorre um anianhamento pode ou não ocorrer a quebra de linha depende da tag, exemplo:

<p>
	josé <p> cruzou a rua </p> 
</p>
--------
o display será 
	josé

	cruzou a rua

pois a tag <p> quebra a linha, porém a forma correta para se dar uma quebra de linha e não iniciar um paragrafo é com a tag <br/>, no local da quebra de linha pois o espaçamento é menor e segue a linearidade do texto, exemplo:

<p>
	pedro <br/> comeu maça
</p>
---------
o display será 

	pedro 
	comeu maça

Contudo há elementos como o <em> o <a> que se usado não terá essa quebra e o texto continuara linear

/* AULA 9 */
<!--prática
ESCREVER 2 PARAGRAFOS, UM USANDO A TAG <em> PARA DAR ENFASE E <strong> PARA IMPORTANCIA, COM UM LINK DE SAIBA MAIS, NÃO IMPORTA O ENCAMINHAMENTO DO LINK
-->
exemplo:

<p>
   <em>Lorem ipsum dolor,</em> sit amet consectetur adipisicing elit. 
   Nostrum accusantium iusto a voluptas quod dolores hic magnam fugiat modi! <br>
   <strong>Consequuntur dolore quaerat dolorem debitis impedit itaque, 
   </strong>consequatur saepe quasi at?
</p>

<p>
    <strong>
    Lorem ipsum dolor, sit amet consectetur adipisicing elit. 
    Nostrum accusantium iusto a voluptas quod dolores hic magnam fugiat modi! </strong> <br>
    Consequuntur dolore quaerat dolorem debitis impedit itaque, 
    consequatur saepe quasi at?
 </p>

 <a href="https://www.google.com.br" > SAIBA MAIS </a>

/* AULA 10 */

<p>
	&nbsp; (da um espaçamento )
	os espaços 

	que colocamos

	além das quebras de linhas são ignorados

</p>

os caracteres reservados não são usados na propria escrita caso você tente utilizar o < dentro de um <p> pode ser que de algum erro, para isso utilizamos uma biblioteca com o & para chamar o caracter desejado no documento tags ta tudo certinho; 

/* AULA 11 */
Documento HTML:

para começar o documento se inicia com 

<!DOCTYPE html>

usado pelos navegadores identificar que é HTML 5;

logo apos usaremos o html (explicado na seção TAGS do documento tags)
e dentro do html o head e o body, como no exemplo:

<!DOCTYPE html>
<html lang="pt-br">
    <head>

    </head>
    <body>
        
    </body>
</html>

para colocar um titulo na pagina dentro do head se usa a tag <title> (documento Tag) 
com o meta charset ="utf-8"
dentro do body utilizaremos tags como div, h1, p, para mostrar ao usuario o que se fazer;

caso você esteja no visual Studio Code, basta colocar o ! e clicar enter que ele te da a anatomia pronta, mas no começo é melhor praticar;

<meta name="viewport" content="width=device-width, initial-scale=1.0">

este comando acima configura o html para todo o tipo de dispositivo, independente se é grande, ou pequeno a pág vai ser responsiva para tal

/* AULA 11 */ 

inciar uma nova pasta com o nome do projeto, e assim você pode usar o vscode para abrir sua pasta, assim vc trabalha diretamente com as pastas e assim fica mais facil de organizar tudo, e até melhor a visualisação

/* AULA 12 */ 

semantica do HTML, que se usa para dar significado e tais elementos é fixado e indexado de forma mais semantica nas paginas do google, leitores de tela para quem necessita, e quais são os elementos semanticos para tal leitura sendo elas mais de 100

/* AULA 13 */
Cabeçalho e paragrafo, se for um texto mais bagunçado não vai ser util e pode levar ao desinteresse do usuario, sendo as tags h1, h2, h3, h4, h5, h6; são para titulos, sendo o h1 o maior e o menor o h6, e utilizando tais tags é mais facil de estruturar o texto para o usuario, e assim auxilia na hora de acessar os elementos da página;

/* AULA 14 */
Listas, ordenadas ou não ordenadas, você utiliza as tags <li> (list item) para cada item especifico, como no exemplo:
	<h1> Suco Detox </h1>

        <h2> Ingredientes </h2>

        <li>3 Folhas de Couve</li>
        <li>1 Laranja</li>
        <li>300 ml de água</li>
        <li>Adoçante a gosto</li>
        <li>Gelo a gosto</li>

(DICA SE VOCE COLOCAR A TAG E MULTIPLICALA O VSCODE MULTIPLICA PELA QUANTIDADE DE VEZES, exemplo (li*5) E APOS PRESSIONE ENTER)

mas ao invés de só criar itens soltos na página você pode criar dentro de uma tag <ol> {order list}, na qual deixará a lista ordenada, e assim ele mostra os números da lista; caso você não deseje os números mas deseja indicar que é de uma lista, pode-se utilizar a tag <ul> que deixará apenas um pontinho na frente do elemento como no exemplo:

	<h1> Suco Detox </h1>

        <h2> Ingredientes: </h2>
        <ul>
            <li> 3 Folhas de Couve;</li>
            <li> 1 Laranja;</li>
            <li> 300 ml de água;</li>
            <li> Adoçante a gosto;</li>
            <li> Gelo a gosto.</li>
        </ul>

/* AULA 15 */
CITAÇÕES - pode se usar a tag do blockquote como no exemplo abaixo: 

	<blockquote cite="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote">
            <p> 
                O <strong> Elemento HTML <code> &lt;blockquote&gt; </code> </strong> (ou <em> HTML Block Quotation Element </em>) Indica que um texto externo foi citado.
            </p>
        </blockquote>

o atributo cite indica de onde saiu a citação, já o code dentro do <p> deixa o texto em cor diferente no caso amarelo;

tambem possuimos a tag cite para citação que de certa forma é mais simples de ser trablhada como no exemplo:

<p>De acordo com <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/blockquote"><cite> página MDN blockquote </cite></a></p>

a tag cite faz a citação, e isso serve para os moteores de busca do navegador, além de ajustar a disponibilidade

/* AULA 16 */

Abreviações - usamos a tag abbr com o atributo title apos mostramos a abreviação como no exemplo: 
	<p>
            Usamos <abbr title="Hipertext Markup Language">HTML</abbr> para estruturar nossos documentos da web
        </p>

/* AULA 17 */
DETALHES DE CONTATO DE QUEM FEZ O HTML - utilizando a tag <address> como no exemplo abaixo;

	<p> Pedro Marçal <br>
        <strong> Franca, SP </strong></p>

/* AULA 18 */
Listas de Descrição- temos a tag <dl> que funciona como a tag <ol>, dl == description list; temos o <dt> {description term}, como no exemplo abaixo:

<dl>
            <dt>Hypertext</dt>
            <dd>É um Hyper texto com possibildade ...</dd>

            <dt>Markup</dt>
            <dd>É uma linguagem de marcação</dd>

            <dt>Language</dt>
            <dd>Linguagem com semantica e sintaxe</dd>
        </dl>
O <dd> será a descrição do dt

/* AULA 18 */
como representar codigos no html; a tag <code> é para um codigo curto de uma linha assim não precisa ficar com medo dos caracteres reservados, contudo caso seja necessario um bloco de codigo maior utilizamos a tag <pre> assim dentro do pre conseguimos possuir varios <code>

	<pre>
            <code>
                for i in range(x):
                    print(x)
            </code>
        </pre> 

porém se for um codigo com as tags do proprio html se usa as palavras reservadas, a tag <xmp> trocando mostra os caracteres especiais porem não é mais utilizada e pode dar erro então cuidado ao usar o xmp


/* AULA 19 */
<div> agrupar conteudos {blocos}
<span> agrupar textos {linhas}

usado para separar os conceitos é muito usado para o CSS ou JS;

/* AULA 20 */
URLS - <a href="">Conteudo</a>
a tag <a>
recebe atributos globais e o href (referencia), e esta pode ser uma url completa, fragmentos, email, telefone e outros;
com o atributo dowload = "", que pode ser apenas o dowload da imagem, porem pode-se especificar quando colocado = "" após o atributo, 
e o por fim o atributo target que é definido quando eu clicar neste link eu serei levado a que pagina, sendo target="_blank" (outra página), e target="_self" a mesma, o seld j´á é configuração default;

/* AULA 21 */ 
Hiperlinks e suas estrategias - 
como apresentado anteriormente os hiperlinks servem como auxilio e ancoragem no seu site como o exemplo:
	<ul>
            <li><a href="https://rocketseat.com.br" target="_blank">Website</a></li>
            <li><a href="mailto:pedro.h.silva.marcal@gmail.com" >Email</a></li>
            <li><a href="tel:+5516244466666">Telefone</a></li>
        </ul>
porém pode se linkar a sessoês dentro do HTML ou outras páginas, para sessões iremos com o fragmento e o nome da sessão:
<ul>
            <li><a href="#codigos_no_HTML"> Code </a></li>
            <li><a href="#Hiperlinks">Hiperlinks</a></li>
            <li><a href="#listas_descricao">Descricao</a></li>
        </ul>

caso exista um id semelhante com o fragmentado dentro da pagina, o usuario sera redirecionado para tal localidade dentro do site

/* AULA 22 */ 
dentro da tag <a> se pode usar outras tags,
 <a href="http://google.com" title="Ir google">
            <img src="https://source.unsplash.com/random" alt="randomimage">
        </a>

/* AULA 23 */
como navegar entre links interno dos projetos, URL = Uniform Resource Locator, e assim conseguimos encontrar arquivos, com a tag <a> colocamos o nome do arquivo sem https, porém tal esteja em outro diretorio utilizamos outras formas;

/* AULA 24 */
para navegar para outros diretorios, a partir da mesma pasta se faz 
(nome da pasta)/(nome do arquivo);
../(sair da pasta == ../ e dai vc acha seu caminho;
diretorio raiz se usa ./(caminho);

/* AULA 25 */
URL absolutos sempre irão levar a um target especifico onde levam a uma URLS especifico, como o https://google.com (vai pro site), já o relativo ele vai ser com relação a pagina então google.com (este procurará nas pastas e diretorio) 

/* AULA 26 */
exercicio pratico crie um projeto com 2 arquivos no diretorio um com index.html e o outro com crontact.html;

para abrir os emails no <a> se usa mailto:email@mail.ocm
e no telefone é tel: 

/* AULA 27 */

elemento table - organização de dados, é excelente aos dados linhas e colunas, e acessibilidade para leitura porém é pouco flexivel e precisara de CSS

/* AULA 28 */
para se criar uma tabela é bem simples, se  usara a tag <table> e dentro dela inserir uma tag chamada <tr> {table room}, tal criara uma linha, e logo após colocamos a tag <th> que seria como o cabeçalho dos dados dentro da <tr>:
    <table>
        <tr>
            <th>Nome</th>
            <th>Idade</th>
        </tr>
            <td> Linha 1 </td>
            <td> 35 </td>
        <tr>
            <td> Linha 2 </td>
            <td> 25 </td>
        </tr>
    </table>

/* AULA 29 */
para possuirmos uma organização maior é preferivel colocar dentro do <thead> e do <tbody>, tags usadas para manter uma organização sobre o que são os titulos da tabela e o que são os elementos do corpo, <thead> para titulo, enquanto <tbody> para corpo, além do <tfoot> que pode ser usado para colocar resultados de uma tabela, ou até mesmo a caption usada para descrever do que é a tabela:
    <table>
        <caption> Linhas por numeros </caption>

        <thead>
            <tr>
                <th>Nome</th>
                <th>Idade</th>
            </tr>
        </thead>
        <tbody>
        <tr>
            <td> Linha 1 </td>
            <td> 35 </td>
        </tr>
        <tr>
            <td> Linha 2 </td>
            <td> 25 </td>
        </tr>
        </tbody>

        <tfoot>
            <td> Total: </td>
            <td> 2 Linhas </td>
        </tfoot>
    </table>

/* AULA 30 */
a tag <th>  possui um atributo chamado rowspan="Valor desejado", esse atributo assim com o colspan="Valor Desejado", fazem o controle de quantas linhas ou colunas eles vão assumir o rowspan vem para controlar quantas linhas determinado elemento vai pegar na tabela, enquanto o colspan vem como controle de colunas que um elemento vai possuir; exemplo: 

<tr>
    <th rowspan="2"></th>
    <th colspan="2">Afonso Pena</th>
    <th colspan="2">Antonio Pereira </th>
</tr>

/* AULA 31 */

Utilizamos uma tag chamada <colgroup> ela serve para separa e estilizar as principais colunas, desta forma fica mais facil de utilizar dentro do colgroup tera a tag <col> e o estilo vai nela interno como no exemplo:

<colgroup>
    <col>
    <col style="background-color: red;" span="2">
    <col style="background-color: blueviolet;" span="2">
</colgroup>

o atributo span server para definir qual o tamanho dentro da coluna no caso de 2

/* AULA 32 */ 
para os leitores não é mt simples ler uma tabela, pois ele pode se perder ou n indicar corretamente onde esta o que, porém se existe uma coisa chamada escopo, na qual podemos definir onde sera lido qual o tamanho e qual locar a ser seguido, para o definir o escopo a tag <th> tem o atributo escope e nele vc define col e row, como no exemplo:
<thead>
                <tr>
                    <th rowspan="2"></th>
                    <th colspan="2" scope="colgroup">Afonso Pena</th>
                    <th colspan="2" scope="colgroup">Antonio Pereira </th>
                </tr>

                <tr>
                    <th scope="col">Produzidos</th>
                    <th scope="col">Vendidos</th>
                    <th scope="col">Produzidos</th>
                    <th scope="col">Vendidos</th>
                </tr>
            </thead>

            <tbody>
                <tr>
                    <th scope="row">Vassouras</th>
                    <td>50</td>
                    <td>30</td>
                    <td>20</td>
                    <td>20</td>
                </tr>

                <tr>
                    <th scope="row">Baldes</th>
                    <td>10</td>
                    <td>10</td>
                    <td>30</td>
                    <td>20</td>
                </tr>
            </tbody>
        </table>

/* AULA 33 */
no head nos possuimos o meta que trabalha com os metadados da nossa página, como padrão vem o meta charset que define o padrão de linguagem, e o meta name="viewport", que define para nos a portabilidade a dispositivos moveis, geralmente nas metas tem se o name e o content, nome e conteudo

/* AULA 34 */
Metas Importantes para os motores de busca; meta charset, e meta viewport;

<meta name="author" content="Pedro Marçal">, define como metadado o autor da página

<meta name="description" content=""> dentro do contente você colocara qual o intuito da pagina, e ficara esposto no google o texto informativo desejado

<meta name="robots" content="nofollow"> 
{nofollow: não segue os links da página;
follow: segue os links da pagina;
noindex: pagina não anexada;
}; 
é para informar o robozinho do google como agir dentro da página

/* AULA 35 */
As redes socias tambem podem criar metadados para auxiliar na divulgação
<!--face-->
<meta property="og:image" content="https://cdn-images-1.medium.com.max/92/1*TkXVfLTwsHdwpUEjGzdi9w@2x.jpeg">
<meta property="og:description" content="Texto Informativo">
<meta property="og:title" content="Site">
{og.image: pega uma imagen para compartilhamento do face;
og.description: texto a ser mostrado ao compartilhar no face
og.title: Titulo a ser apresentado
}

<!--twitter-->
